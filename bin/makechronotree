#!/usr/bin/env ruby

require 'optparse'
#require 'db'
#require 'makechronotree'
# For testing while developing without building gem
require_relative '../lib/db'
require_relative '../lib/makechronotree'

origin = nil

OptionParser.new do |opts|
	opts.banner = "Usage: makechronotree [OPTION]... SOURCE DEST"
	opts.banner += "\nMove content from SOURCE to DEST, and create a chronological folder structure (YEAR > MONTH)."
	opts.banner += "\nIf DEST path does not exist, create it."
	opts.banner += "\nWill create/modify a sqlite3 databasefile in the root of DEST, containing an entry for each file (created date, MD5 Hash, origin..)" 

	opts.separator("")
	opts.separator("Specific options:")

    opts.on(
    	"-o",
    	"--origin [NAME]",
    	"Link all files to named origin. Can be used to identify the device where files originated from."
    ) do |name|
    	origin = name
    end
end.parse!

if(!defined?(ARGV) || !ARGV.kind_of?(Array) || ARGV.length < 2)
	Makechronotree::log('Error: Missing or invalid arguments..')
	exit
end

Makechronotree::start(ARGV[0], ARGV[1], origin)
